{"ast":null,"code":"var _jsxFileName = \"/Users/ashleighparsons/Downloads/Personal Docs/practice/react-todo/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctor Appointment',\n    completed: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    completed: false\n  }]);\n  const [text, setText] = useState('');\n  function addTask(text) {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    setText('');\n  }\n  function deleteTask(id) {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n  function toggleCompleted(id) {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      } else {\n        return task;\n      }\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n      task: task,\n      deleteTask: deleteTask,\n      toggleCompleted: toggleCompleted\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(text),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"JqIa3//Nzlid4cwcIIYKoUSDd84=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoItem","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","id","text","completed","setText","addTask","newTask","Date","now","deleteTask","filter","task","toggleCompleted","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ashleighparsons/Downloads/Personal Docs/practice/react-todo/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TodoItem from './TodoItem';\n\nfunction TodoList() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctor Appointment',\n      completed: true\n    },\n    {\n      id: 2,\n      text: 'Meeting at School',\n      completed: false\n    }\n  ]);\n  \n  const [text, setText] = useState('');\n  \n  function addTask(text) {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n  \n    setTasks([...tasks, newTask]);\n    setText('');\n    }\n\n  function deleteTask(id) {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n\n  function toggleCompleted(id) {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return {...task, completed: !task.completed};\n      } else {\n        return task;\n      } \n    }));\n  }\n  return (\n    <div className=\"todo-list\">\n      {tasks.map(task => (\n        <TodoItem\n        key={task.id} \n        task={task}\n        deleteTask={deleteTask}\n        toggleCompleted={toggleCompleted} \n        />\n      ))}\n      <input\n        value={text}\n        onChange={e => setText(e.target.value)} \n      />\n      <button onClick={() => addTask(text)}>Add</button>\n    </div>\n  );\n}\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CACjC;IACEQ,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,oBAAoB;IAC1BC,SAAS,EAAE;EACb,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,mBAAmB;IACzBC,SAAS,EAAE;EACb,CAAC,CACF,CAAC;EAEF,MAAM,CAACD,IAAI,EAAEE,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASY,OAAOA,CAACH,IAAI,EAAE;IACrB,MAAMI,OAAO,GAAG;MACdL,EAAE,EAAEM,IAAI,CAACC,GAAG,CAAC,CAAC;MACdN,IAAI;MACJC,SAAS,EAAE;IACb,CAAC;IAEDH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEO,OAAO,CAAC,CAAC;IAC7BF,OAAO,CAAC,EAAE,CAAC;EACX;EAEF,SAASK,UAAUA,CAACR,EAAE,EAAE;IACtBD,QAAQ,CAACD,KAAK,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChD;EAEA,SAASW,eAAeA,CAACX,EAAE,EAAE;IAC3BD,QAAQ,CAACD,KAAK,CAACc,GAAG,CAACF,IAAI,IAAI;MACzB,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAC,GAAGU,IAAI;UAAER,SAAS,EAAE,CAACQ,IAAI,CAACR;QAAS,CAAC;MAC9C,CAAC,MAAM;QACL,OAAOQ,IAAI;MACb;IACF,CAAC,CAAC,CAAC;EACL;EACA,oBACEf,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBhB,KAAK,CAACc,GAAG,CAACF,IAAI,iBACbf,OAAA,CAACF,QAAQ;MAETiB,IAAI,EAAEA,IAAK;MACXF,UAAU,EAAEA,UAAW;MACvBG,eAAe,EAAEA;IAAgB,GAH5BD,IAAI,CAACV,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF,CAAC,eACFvB,OAAA;MACEwB,KAAK,EAAElB,IAAK;MACZmB,QAAQ,EAAEC,CAAC,IAAIlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFvB,OAAA;MAAQ4B,OAAO,EAAEA,CAAA,KAAMnB,OAAO,CAACH,IAAI,CAAE;MAAAa,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACrB,EAAA,CAzDQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA0DjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}